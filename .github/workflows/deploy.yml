name: Backend Deployment

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          audience: sts.amazonaws.com

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY_URL }}

      - name: Build and Push Docker Image
        run: |
          VERSION="deployment-$(date +%Y%m%d%H%M%S)"
          docker build -f Dockerfile.prod -t backend-elastic-beanstalk-ecr:$VERSION .
          docker tag backend-elastic-beanstalk-ecr:$VERSION ${{ secrets.ECR_REPOSITORY_URL }}/backend-elastic-beanstalk-ecr:$VERSION
          docker push ${{ secrets.ECR_REPOSITORY_URL }}/backend-elastic-beanstalk-ecr:$VERSION
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Create Application Bundle
        run: |
          zip -r app.zip .

      - name: Create Elastic Beanstalk Application Version
        run: |
          aws s3 cp app.zip s3://${{ secrets.S3_BUCKET_NAME }}/$VERSION.zip
          aws elasticbeanstalk create-application-version \
            --application-name backend-elastic-beanstalk-app \
            --version-label $VERSION \
            --source-bundle S3Bucket=${{ secrets.S3_BUCKET_NAME }},S3Key=$VERSION.zip

      - name: Deploy Docker Image to Elastic Beanstalk
        run: |
          aws elasticbeanstalk update-environment \
            --application-name backend-elastic-beanstalk-app \
            --environment-name backend-elastic-beanstalk-env \
            --version-label $VERSION
