name: Backend Deployment

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          audience: sts.amazonaws.com

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY_URL }}

      - name: Build and Push Docker Image
        run: |
          IMAGE_TAG=$(date +%Y%m%d%H%M%S)
          docker build -t backend-elastic-beanstalk-ecr:$IMAGE_TAG .
          docker tag backend-elastic-beanstalk-ecr:$IMAGE_TAG ${{ secrets.ECR_REPOSITORY_URL }}/backend-elastic-beanstalk-ecr:$IMAGE_TAG
          docker push ${{ secrets.ECR_REPOSITORY_URL }}/backend-elastic-beanstalk-ecr:$IMAGE_TAG
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      - name: Deploy Backend to Elastic Beanstalk
        run: |
          terraform init
          terraform apply -var "docker_image_tag=$IMAGE_TAG" -var "ecr_repository_url=${{ secrets.ECR_REPOSITORY_URL }}/backend-elastic-beanstalk-ecr" -var "elastic_beanstalk_env_url=${{ secrets.ELASTIC_BEANSTALK_ENV_URL }}" -auto-approve
